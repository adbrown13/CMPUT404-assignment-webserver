import SocketServer
import os.path

# coding: utf-8

# Copyright 2013 Abram Hindle, Eddie Antonio Santos
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Furthermore it is derived from the Python documentation examples thus
# some of the code is Copyright  2001-2013 Python Software
# Foundation; All Rights Reserved
#
# http://docs.python.org/2/library/socketserver.html
#
# run: python freetests.py

# try: curl -v -X GET http://127.0.0.1:8080/


class MyWebServer(SocketServer.BaseRequestHandler):
    
    def handle(self):
        self.data = self.request.recv(1024).strip()
	address=self.data.split()[1]
	limit=os.getcwd()+"/www"
	requested=os.path.abspath(os.getcwd()+"/www"+address)
	if (limit==os.path.commonprefix([requested,limit])):
		if os.path.isfile(os.getcwd()+"/www"+address):
			send=''
			f=open(os.getcwd()+"/www"+address)
			send="HTTP/1.1 200 OK\r\n"
			send+=("Content-Type: text/%s\r\n\r\n" %address.split('.')[-1])
			line=f.read(1024)
			while(line):
				send+=line
				line=f.read(1024)
			self.request.sendall(send)
		elif (address.endswith("/")==True):
			if os.path.isdir(os.getcwd()+"/www"+address):
				olddir=os.getcwd()
				send=''
				os.chdir(os.getcwd()+"/www"+address)
				address+="/index.html"
				f=open(os.getcwd()+"/index.html")
				
				send="HTTP/1.1 200 OK\r\n"
				send+="Content-Type: text/html\r\n\r\n"
				
				line=f.read(1024)
				while(line):
					send+=line
					line=f.read(1024)
				self.request.sendall(send)
				os.chdir(olddir)
		else:
			print("heres")	
			self.request.sendall("HTTP/1.1 404 Not Found\r\nContent-Type: text/plain\r\n\r\n 404 Not Found")			
				
	else:	
		self.request.sendall("HTTP/1.1 404 Not Found\r\n\r\n")

if __name__ == "__main__":
    HOST, PORT = "localhost", 8080

    SocketServer.TCPServer.allow_reuse_address = True
    # Create the server, binding to localhost on port 8080
    server = SocketServer.TCPServer((HOST, PORT), MyWebServer)

    # Activate the server; this will keep running until you
    # interrupt the program with Ctrl-C
    server.serve_forever()
